global
    log /dev/log    local0
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    contimeout 5000
    clitimeout 50000
    srvtimeout 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind :80
    % for app in apps:
      % if app.get("port") == 80:
    acl host_${app.get('name')} hdr(host) -i ${app.get('domain')}
    use_backend ${app.get('name')} if host_${app.get('name')}
      % endif
    % endfor

% for app in apps:
% if app.get('port') == 80:
backend ${app.get('name')}
    balance leastconn
    % for container in app.get('containers'):
      % for port in container.get('Ports'):
        % if port.get("IP") and port.get("PrivatePort") == 80:
    server ${container.get('Id')} ${port.get("IP")}:${port.get("PublicPort")}
        % endif
      % endfor
    % endfor
% endif
% endfor

% for port in service_ports:
% if port != 80:
listen tcp_${port} :${port}
    mode tcp
    option tcplog
    balance leastconn
    % for app in apps:
        % if app.get('port') == port:
            % for container in app.get('containers'):
              % for cport in container.get('Ports'):
                % if cport.get("IP") and cport.get("PrivatePort") == port:
    server ${container.get('Id')} ${cport.get("IP")}:${cport.get("PublicPort")}
                % endif
              % endfor
            % endfor
        % endif
    % endfor
% endif
% endfor 

<%
  run("service haproxy restart")
%>
